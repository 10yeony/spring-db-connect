<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 메타데이터 관련 쿼리 -->
<mapper namespace="MetadataMapper">
	<resultMap id="metadataAndProgram" type="kr.com.inspect.dto.Metadata">
   		<id column="metadata_id" property="id" />
   		<result column="row_num" property="row_num" />
    	<result column="creator" property="creator" />
    	<result column="annotation_level" property="annotation_level" />
    	<result column="metadata_year" property="year" />
    	<result column="sampling" property="sampling" />
    	<result column="metadata_title" property="title" />
    	<result column="category" property="category" />
    	<result column="audio_type" property="audio_type" />
    	<result column="distributor" property="distributor" />
    	<result column="relation" property="relation" />
    	<result column="sentence_count" property="sentence_count" />
    	<result column="eojeol_total" property="eojeol_total" />
    	<collection property="program" javaType="kr.com.inspect.dto.Program">
      		<id column="program_id" property="id"/>
      		<result column="file_num" property="file_num"/>
      		<result column="program_title" property="title"/>
      		<result column="subtitle" property="subtitle"/>
			<result column="running_time" property="running_time"/>
		</collection> 
	</resultMap>
	
	<!-- metadata 테이블에 데이터를 입력함 -->
	<insert id="insertIntoMetadata" parameterType="kr.com.inspect.dto.Metadata">
		INSERT INTO audio.metadata
				(creator, 
				annotation_level, 
				year, 
				sampling, 
				title, 
				category, 
				audio_type,
				distributor, 
				relation)
			VALUES(#{creator}, 
				#{annotation_level}, 
				#{year}, 
				#{sampling}, 
				#{title}, 
				#{category}, 
				#{audio_type},
				#{distributor}, 
				#{relation});
	</insert>
	
	<!-- creator와 title로 auto increment된 metadata id를 받아옴(다른 테이블의 외래키 입력을 위함) -->
	<select id="getMetadataId" parameterType="map" resultType="int">
		SELECT 
			id 
		FROM 
			audio.metadata 
		WHERE 
			creator = #{creator} AND title = #{title};
	</select>
	
	<!-- creator, title로 metadata id가 존재하는지 확인함(중복 등록 방지) -->
	<select id="isExistMetadataId" parameterType="map" resultType="string">
		SELECT 
			id
		FROM 
			audio.metadata
		WHERE 
			creator = #{creator} AND title = #{title};
	</select>
	
	<!-- metadata 전체 데이터 총 개수 -->
	<select id="getMetadataCnt" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			audio.metadata;
	</select>
	
	<!-- Metadata 유형별 강의 총 개수 -->
	<select id="getMetadataCntByType" parameterType="string" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			audio.metadata
		WHERE
			audio_type = #{type};
	</select>
	
	<!-- metadata 전체 데이터 검색 후 총 개수 -->
	<select id="getToSearchMetdataCnt" parameterType="string" resultType="int">
		SELECT
  			COUNT(*)
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			p.title LIKE '%'||#{search_word}||'%'
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%';
	</select>
	
	<!-- metadata 한국어 강의 데이터 검색 후 총 개수 -->
	<select id="getToSearchMetdataInLectureCnt" parameterType="string" resultType="int">
		SELECT
  			COUNT(*)
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			audio_type = 'LH'
			AND (p.title LIKE '%'||#{search_word}||'%'
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%');
	</select>
	
	<!-- metadata 회의 음성 데이터 검색 후 총 개수 -->
	<select id="getToSearchMetdataInMeetingCnt" parameterType="string" resultType="int">
		SELECT
  			COUNT(*)
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			audio_type = 'CG'
			AND (p.title LIKE '%'||#{search_word}||'%'
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%');
	</select>
	
	<!-- metadata 테이블 가져오기 -->
	<select id="getMetadata" resultType="kr.com.inspect.dto.Metadata">
		SELECT * 
		FROM 
			audio.metadata;
	</select>

	<!-- id를 이용해서 metadata 데이터 가져오기 -->
	<select id="getMetadataById" parameterType="int" resultType="kr.com.inspect.dto.Metadata">
		SELECT * 
		FROM 
			audio.metadata
		WHERE 
			id = #{id};
	</select>
	
	<!-- Metadata와 Program을 조인해서 가져옴(전체 데이터) -->
	<sql id="getMetadataAndProgram">
		SELECT
  			(ROW_NUMBER() OVER()) AS row_num,
  			m.id metadata_id,
  			m.creator creator,
  			m.annotation_level annotation_level,
  			m.year metadata_year,
  			m.sampling sampling,
  			m.title metadata_title,
  			m.category category,
  			m.audio_type audio_type,
  			m.distributor distributor,
  			m.relation relation,
  			p.id program_id,
  			p.file_num file_num,
  			p.title program_title,
  			p.subtitle subtitle,
  			p.running_time running_time,
			ut.sentence_count sentence_count,
			eo.eojeol_total eojeol_total
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
	</sql>
	<select id="getMetadataAndProgram"  
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgram" />
  		ORDER BY 
			metadata_id
	</select>
	<select id="getMetadataAndProgramByPaging" parameterType="hashMap" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgram" />
  		ORDER BY 
			metadata_id DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>
	<select id="searchMetadataAndProgramByPaging" parameterType="hashMap"
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
		SELECT
  			(ROW_NUMBER() OVER()) AS row_num,
  			m.id metadata_id,
  			m.creator creator,
  			m.annotation_level annotation_level,
  			m.year metadata_year,
  			m.sampling sampling,
  			m.title metadata_title,
  			m.category category,
  			m.audio_type audio_type,
  			m.distributor distributor,
  			m.relation relation,
  			p.id program_id,
  			p.file_num file_num,
  			p.title program_title,
  			p.subtitle subtitle,
  			p.running_time running_time,
			ut.sentence_count sentence_count,
			eo.eojeol_total eojeol_total
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			p.title LIKE '%'||#{search_word}||'%'
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%'
		ORDER BY 
			m.id DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>
	
	<!-- Metadata와 Program을 조인해서 가져옴(한국어 강의 데이터) -->
	<sql id="getMetadataAndProgramInLecture">
		<include refid="getMetadataAndProgram" />
		WHERE 
			audio_type = 'LH'
		ORDER BY 
			metadata_id
	</sql>
	<select id="getMetadataAndProgramInLecture" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgramInLecture" />
	</select>
	<select id="getMetadataAndProgramInLectureByPaging" parameterType="hashMap" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgramInLecture" />
  		DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>
	<select id="searchMetadataAndProgramInLectureByPaging" parameterType="hashMap" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
		SELECT
  			(ROW_NUMBER() OVER()) AS row_num,
  			m.id metadata_id,
  			m.creator creator,
  			m.annotation_level annotation_level,
  			m.year metadata_year,
  			m.sampling sampling,
  			m.title metadata_title,
  			m.category category,
  			m.audio_type audio_type,
  			m.distributor distributor,
  			m.relation relation,
  			p.id program_id,
  			p.file_num file_num,
  			p.title program_title,
  			p.subtitle subtitle,
  			p.running_time running_time,
			ut.sentence_count sentence_count,
			eo.eojeol_total eojeol_total
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			m.audio_type = 'LH'
			AND (p.title LIKE '%'||#{search_word}||'%'
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%')
		ORDER BY 
			m.id DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>
	
	<!-- Metadata와 Program을 조인해서 가져옴(회의 음성 데이터) -->
	<sql id="getMetadataAndProgramInMeeting">
		<include refid="getMetadataAndProgram" />
		WHERE 
			audio_type = 'CG'
		ORDER BY 
			metadata_id
	</sql>
	<select id="getMetadataAndProgramInMeeting" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgramInMeeting" />
	</select>
	<select id="getMetadataAndProgramInMeetingByPaging" parameterType="hashMap" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
  		<include refid="getMetadataAndProgramInMeeting" />
  		DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>
	<select id="searchMetadataAndProgramInMeetingByPaging" parameterType="hashMap" 
		resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram">
		SELECT
  			(ROW_NUMBER() OVER()) AS row_num,
  			m.id metadata_id,
  			m.creator creator,
  			m.annotation_level annotation_level,
  			m.year metadata_year,
  			m.sampling sampling,
  			m.title metadata_title,
  			m.category category,
  			m.audio_type audio_type,
  			m.distributor distributor,
  			m.relation relation,
  			p.id program_id,
  			p.file_num file_num,
  			p.title program_title,
  			p.subtitle subtitle,
  			p.running_time running_time,
			ut.sentence_count sentence_count,
			eo.eojeol_total eojeol_total
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			m.audio_type = 'CG'
			AND (p.title LIKE '%'||#{search_word}||'%' 
			OR p.subtitle LIKE '%'||#{search_word}||'%'
			OR m.creator LIKE '%'||#{search_word}||'%'
			OR p.file_num LIKE '%'||#{search_word}||'%')
		ORDER BY 
			m.id DESC
		LIMIT 
			#{limit} 
		OFFSET 
			#{offset};
	</select>

	<!-- Metadata와 Program을 조인한 것을 id로 가져옴 -->
	<select id="getMetadataAndProgramUsingId" resultType="kr.com.inspect.dto.Metadata" resultMap="metadataAndProgram" parameterType="Integer">
		SELECT
			(ROW_NUMBER() OVER()) AS row_num,
  			m.id metadata_id,
  			m.creator creator,
  			m.annotation_level annotation_level,
  			m.year metadata_year,
  			m.sampling sampling,
  			m.title metadata_title,
  			m.category category,
  			m.audio_type audio_type,
  			m.distributor distributor,
  			m.relation relation,
  			p.id program_id,
  			p.file_num file_num,
  			p.title program_title,
  			p.subtitle subtitle,
  			p.running_time running_time,
			ut.sentence_count sentence_count,
			eo.eojeol_total eojeol_total
  		FROM
  			audio.metadata m
  		LEFT JOIN audio.program p 
		ON
  			m.title = p.file_num
		LEFT JOIN 
			(SELECT metadata_id, COUNT(form) sentence_count
				FROM audio.utterance
				GROUP BY metadata_id) ut
		ON
			m.id = ut.metadata_id
		LEFT JOIN 
			(SELECT metadata_id, COUNT(standard) eojeol_total
				FROM audio.eojeolList
				GROUP BY metadata_id) eo
		ON
			m.id = eo.metadata_id
		WHERE 
			m.id = #{metaId};
	</select>

	<!-- 대쉬보드에 쓰일 데이터 개수 리턴 -->
	<select id="getDashboardCount" resultMap="getCountMapList">
		select
		(select count(*) from audio.member) "member",
		(select count(*) from audio.metadata) "metadata",
		(select count(*) from audio.utterance) "utterance"
	</select>
	<resultMap id="getCountMapList" type="map">
		<result column="member" property="member"/>
		<result column="metadata" property="metadata"/>
		<result column="utterance" property="utterance"/>
		<result column="eojeol" property="eojeol"/>
	</resultMap>
</mapper>