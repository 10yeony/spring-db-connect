<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 회원 관련 쿼리 -->
<mapper namespace="MemberMapper">

	<!-- 공통 SQL : 회원정보를 가져옴 -->
	<sql id="getMember">
		SELECT 
			* 
		FROM 
			audio.member 
	</sql>
	
	<!-- 등록시 중복 여부 체크 -->
	<sql id="registerCheck">
		SELECT 
			COUNT(*) 
		FROM 
			audio.member 
	</sql>

	<!-- 회원 목록 가져옴 -->
	<select id="getMemberList" resultType="kr.com.inspect.dto.Member">
		<include refid="getMember" />
		ORDER BY 
			member_id;
	</select>
	
	<!-- 특정 권한을 가진 회원 목록을 가져옴 -->
	<select id="getMemberListUsingRole" parameterType="string" resultType="kr.com.inspect.dto.Member">
		SELECT 
			m.member_id, m.email, m.phone
		FROM
			audio.member m
		LEFT JOIN 
			audio.authority a 
		ON 
			m.member_id = a.username 
		WHERE 
			a.authority_name = #{role}
		ORDER BY 
			m.member_id;
	</select>

	<!-- 아이디로 회원정보를 가져옴 -->
	<select id="readMemberById" parameterType="kr.com.inspect.dto.Member" resultType="kr.com.inspect.dto.Member">
		<include refid="getMember" />
		WHERE 
			member_id = #{member_id};
	</select>
	
	<!-- 아이디 중복 체크  -->
	<select id="idCheck" parameterType="string" resultType="int">
		<include refid="registerCheck" />
		WHERE 
			member_id = #{member_id};
	</select>
	
	<!-- 이메일 중복 체크  -->
	<select id="emailCheck" parameterType="string" resultType="int">
		<include refid="registerCheck" />
		WHERE 
			email = #{email};
	</select>
	
	<!-- 연락처 중복 체크  -->
	<select id="phoneCheck" parameterType="string" resultType="int">
		<include refid="registerCheck" />
		WHERE 
			phone = #{phone};
	</select>
	
	<!-- 회원가입 -->
	<insert id="registerMember" parameterType="kr.com.inspect.dto.Member">
		INSERT INTO 
			audio.member
			(member_id, 
			pwd, 
			name,
			isAccountNonExpired, 
			isAccountNonLocked, 
			isCredentialsNonExpired, 
			isEnabled,
			phone, 
			email)
		VALUES
			(#{member_id}, 
			#{pwd},
			#{name}, 
			#{isAccountNonExpired}, 
			#{isAccountNonLocked}, 
			#{isCredentialsNonExpired}, 
			#{isEnabled},
			#{phone}, 
			#{email});
	</insert>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="kr.com.inspect.dto.Member">
		UPDATE
			audio.member
		SET
			pwd = #{pwd}, 
			name = #{name},
			isAccountNonExpired = #{isAccountNonExpired}, 
			isAccountNonLocked = #{isAccountNonLocked}, 
			isCredentialsNonExpired = #{isCredentialsNonExpired}, 
			isEnabled = #{isEnabled},
			phone = #{phone}, 
			email = #{email}
		WHERE
			member_id = #{member_id};
	</update>
	
	<!-- 비밀번호 수정 -->
	<update id="updatePwd" parameterType="hashMap">
		UPDATE
			audio.member
		SET
			pwd = #{pwd}
		WHERE
			member_id = #{member_id};
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="string">
		DELETE FROM 
			audio.member
		WHERE 
			member_id = #{member_id};
	</delete>

	<!-- 회원 수 리턴 -->
	<select id="getMemberCount" resultType="int">
		SELECT count(*)
		FROM audio.member;
	</select>
</mapper>