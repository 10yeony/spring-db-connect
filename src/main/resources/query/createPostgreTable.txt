# PostgreSQL 테이블 생성

CREATE TABLE audio.metadata (
    id SERIAL PRIMARY KEY,
    creator text,
    annotation_level text,
    year text,
    sampling text,
    title text NOT NULL,
    category text,
    audio_type text,
    distributor text,
    relation text
); 

CREATE TABLE audio.speaker (
	id SERIAL PRIMARY KEY,
	no integer NOT NULL,
	shortcut integer,
	occupation text,
	sex text,
	name text,
	age text,
	birthplace text,
	current_residence text,
	pricipal_residence text,
	education text,
	metadata_id integer REFERENCES audio.metadata ON DELETE CASCADE
);

CREATE TABLE audio.utterance (
	id text PRIMARY KEY,
	note text,
	form text,
	standard_form text,
	dialect_form text,
	speaker_no text,
	start numeric,
	finish numeric,
	metadata_id integer REFERENCES audio.metadata ON DELETE CASCADE
);

CREATE TABLE audio.eojeolList (
	id text PRIMARY KEY,
	standard text,
	eojeol text,
	finish integer,
	isDialect boolean,
	begin integer,
	utterance_id text REFERENCES audio.utterance ON DELETE CASCADE, 
	metadata_id integer REFERENCES audio.metadata ON DELETE CASCADE
);

CREATE TABLE audio.jsonLog (
    id SERIAL PRIMARY KEY,
    title text,
    start text,
    finish text,
    elapsed text,
    metadata_id integer REFERENCES audio.metadata ON DELETE CASCADE
);

CREATE TABLE audio.program (
	id integer PRIMARY KEY,
	file_num text,
	title text,
	subtitle text,
	running_time text
);

CREATE TABLE audio.member (
	member_id text PRIMARY KEY,
	pwd text NOT NULL,
	name text,
	phone text,
	email text,
	approval text,
	isAccountNonExpired boolean,
	isAccountNonLocked boolean,
	isCredentialsNonExpired boolean,
	isEnabled boolean,
	join_date text
);

CREATE TABLE audio.authority (
	username text REFERENCES audio.member ON DELETE CASCADE,
	authority_name text
);

CREATE TABLE persistent_logins (
	username text NOT NULL,
	series text PRIMARY KEY,
	token text NOT NULL,
	last_used timestamp NOT NULL
 );
 
CREATE TABLE audio.rule_top_level (
	id SERIAL PRIMARY KEY,
	name text
);
 
CREATE TABLE audio.rule_middle_level (
	id SERIAL PRIMARY KEY,
	name text,
	top_level_id integer REFERENCES audio.rule_top_level ON DELETE CASCADE
);
 
CREATE TABLE audio.rule_bottom_level (
	id SERIAL PRIMARY KEY,
	name text,
	description text,
	file_name text,
	creator text,
	contents text,
	result text,
	imp_contents text,
	top_level_id integer REFERENCES audio.rule_top_level ON DELETE CASCADE,
	middle_level_id integer REFERENCES audio.rule_middle_level ON DELETE CASCADE
);

CREATE TABLE audio.api_class (
	id SERIAL PRIMARY KEY,
	name text,
	description text
);

CREATE TABLE audio.api_class_field (
	id SERIAL PRIMARY KEY,
	field_type text,
	name text,
	description text,
	api_class_id integer REFERENCES audio.api_class ON DELETE CASCADE
);

CREATE TABLE audio.api_class_constructor (
	id SERIAL PRIMARY KEY,
	parameter text,
	description text,
	api_class_id integer REFERENCES audio.api_class ON DELETE CASCADE
);

CREATE TABLE audio.api_class_method (
	id SERIAL PRIMARY KEY,
	return_type text,
	name text,
	parameter text,
	description text,
	api_class_id integer REFERENCES audio.api_class ON DELETE CASCADE
);

CREATE TABLE audio.custom_library (
	id SERIAL PRIMARY KEY,
	creator text,
	file_name text,
	class_package text
);

CREATE TABLE audio.using_log (
	no SERIAL PRIMARY KEY,
	ip_addr text,
	time text,
	content text,
	member_id text
);

CREATE TABLE audio.rule_log (
	no SERIAL PRIMARY KEY,
	ip_addr text,
	time text,
	content text,
	top_level_id integer,
	top_level_name text,
	middle_level_id integer,
	middle_level_name text,
	bottom_level_id integer,
	bottom_level_name text,
	library_file_name text,
	member_id text,
	using_log_no integer REFERENCES audio.using_log ON DELETE CASCADE
);

auto_increment 값 초기화
truncate table audio.metadata restart identity cascade;